body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f8f9fa;
  color: #343a40;
  margin: 0;
  padding: 20px;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  min-height: 100vh;
}
.container {
  background-color: #ffffff;
  border-radius: 12px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
  padding: 40px;
  width: 90%;
  max-width: 1200px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 30px;
}
h1 {
  color: #0056b3;
  text-align: center;
  margin-bottom: 30px;
  font-size: 2.5em;
}
.job-description {
  text-align: center;
  font-style: italic;
  color: #6c757d;
  margin-bottom: 20px;
}

/* 다이아그램 스타일 */
#document-diagram {
  position: relative;
  width: 100%;
  min-height: 400px; /* 다이아그램 높이 */
  background-color: #e0f2f7;
  border-radius: 10px;
  padding: 30px;
  box-sizing: border-box; /* 패딩이 너비에 포함되도록 하여 부모를 벗어나지 않게 함 */
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px; /* 세로 간격 */
}

.diagram-node {
  background-color: #ffffff;
  border: 2px solid #007bff;
  border-radius: 8px;
  padding: 15px 25px;
  font-weight: bold;
  color: #333;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: all 0.3s ease;
  text-align: center;
  position: relative; /* 연결선 기준점 */
}
.diagram-node:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  background-color: #e3f2fd;
}

.job-node {
  background-color: #0056b3;
  color: white;
  font-size: 1.8em;
  padding: 20px 40px;
  border-color: #004085;
  margin-bottom: 30px; /* 초기 문서와 간격 */
}

.initial-documents {
  display: flex;
  justify-content: space-around; /* 노드들을 수평으로 균등하게 배치 */
  width: 100%;
  margin-top: 40px;
  padding: 0 20px; /* 좌우 패딩 추가하여 경력기술서 노드가 벗어나는 문제 해결 */
  box-sizing: border-box; /* 패딩이 너비에 포함되도록 설정 */
  align-items: flex-start; /* 각 column의 상단을 기준으로 정렬 */
  position: relative;
  padding: 20px; /* 추가 패딩 */
  box-sizing: border-box; /* 패딩이 너비에 포함되도록 설정 */
}

.document-column {
  display: flex;
  flex-direction: column; /* 노드를 수직으로 쌓음 */
  align-items: center; /* 수직 축의 가운데 정렬 */
  gap: 40px; /* 노드 사이의 수직 간격 증가 */
}

.document-node {
  font-size: 1.1em;
  border-color: #28a745;
  color: #216a3c;
  flex: 1; /* 가로로 균등 배치 */
  margin: 0 10px; /* 노드 간 가로 간격 */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

.extended-node {
  background-color: #d4edda;
  border-color: #28a745;
  font-size: 1em;
  margin-top: 20px; /* 위 노드와의 수직 간격 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}
.extended-node:hover {
  background-color: #c3e6cb;
}

/* 연결선 (CSS로 간단하게 그리기) - 매우 제한적. SVG 권장 */
/* 직무 노드 -> 초기 문서 노드 연결선 */
/* 이 부분은 JavaScript에서 동적으로 계산하여 SVG로 그리는 것이 훨씬 좋습니다. */
/* CSS만으로는 동적으로 정확한 연결선을 그리기 매우 어렵습니다. */
/* 예시: initial-documents 위에 가상 요소를 사용하여 선처럼 보이게 */
.initial-documents::before {
  content: "";
  position: absolute;
  top: -30px; /* 직무 노드 높이/2 + 간격 */
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 20px; /* 직무 노드와 초기 문서 사이의 수직선 */
  background-color: #007bff;
  z-index: -1;
}

/* 개별 문서 노드 사이의 수직선 (확장된 뼈대) */
/* 이 또한 JS로 동적 생성 시 각 노드의 위치를 계산하여 그려야 함 */
/* 예시: extended-node의 :before 가상 요소를 사용하여 위 노드와 연결 */
.extended-node::before {
  content: "";
  position: absolute;
  top: -20px; /* 위 노드 높이/2 + 간격 */
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 15px; /* 위 노드와 현재 노드 사이의 수직선 */
  background-color: #28a745;
  z-index: -1;
}

.rollback-button {
  background-color: #ffc107;
  color: #333;
  border: none;
  border-radius: 5px;
  padding: 5px 10px;
  font-size: 0.8em;
  cursor: pointer;
  margin-top: 5px;
  transition: background-color 0.2s;
}
.rollback-button:hover {
  background-color: #e0a800;
}

/* 모달 스타일 (이전과 유사) */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.6);
  justify-content: center;
  align-items: center;
}
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  width: 80%;
  max-width: 700px;
  position: relative;
  animation: fadeIn 0.3s;
}
.close-button {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}
.close-button:hover,
.close-button:focus {
  color: black;
  text-decoration: none;
}
.modal-content h2 {
  color: #007bff;
  margin-bottom: 20px;
}

.input-group label {
  display: block;
  margin-bottom: 8px;
  font-weight: bold;
  color: #343a40;
}
.input-group textarea,
.input-group input[type="text"] {
  width: calc(100% - 24px); /* Padding 고려 */
  padding: 12px;
  border: 1px solid #ced4da;
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 1em;
  margin-bottom: 15px;
}
textarea {
  resize: vertical;
  min-height: 100px;
}

button[type="submit"],
#add-qa {
  background-color: #28a745;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1.1em;
  font-weight: bold;
  transition: background-color 0.3s ease;
  margin-top: 15px;
}
button[type="submit"]:hover,
#add-qa:hover {
  background-color: #218838;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.8);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  border-radius: 10px;
}

.spinner {
  border: 8px solid #f3f3f3; /* Light grey */
  border-top: 8px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 1.5s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* QA Specific Styles */
.qa-pair {
  border: 1px solid #ddd;
  padding: 10px;
  border-radius: 5px;
  margin-bottom: 10px;
  background-color: #f9f9f9;
}
.qa-question,
.qa-answer {
  width: calc(100% - 10px);
  margin-bottom: 5px;
}
.remove-qa {
  background-color: #dc3545 !important;
  font-size: 0.9em !important;
  padding: 5px 8px !important;
  margin-top: 0 !important;
}
.remove-qa:hover {
  background-color: #c82333 !important;
}

/* Diagram line drawing (example, for full control use SVG) */
/* This is a placeholder and will likely need advanced JS/SVG for complex, dynamic lines */
/* The lines below are illustrative and hardcoded; a real solution needs dynamic positioning */
#document-diagram::before {
  /* Main spine */
  content: "";
  position: absolute;
  top: 120px; /* Adjust based on job-node height */
  left: 50%;
  transform: translateX(-50%);
  width: 4px;
  height: calc(100% - 150px); /* Extend down */
  background-color: #aaa;
  z-index: -2;
}

/* Initial branch lines (conceptual, needs JS to calculate exact points) */
/* Example for first set of branches: */
.job-node::after {
  content: "";
  position: absolute;
  bottom: -30px; /* From job node to initial docs */
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 30px;
  background-color: #007bff;
  z-index: -1;
}
.initial-documents > div:nth-child(1)::before,
.initial-documents > div:nth-child(2)::before,
.initial-documents > div:nth-child(3)::before,
.initial-documents > div:nth-child(4)::before {
  content: "";
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 20px;
  background-color: #007bff;
  z-index: -1;
}
/* Horizontal lines connecting initial docs to main spine */
/* This is very tricky with pure CSS; consider SVG overlay. */
/* You would need to position individual lines for each connection. */
